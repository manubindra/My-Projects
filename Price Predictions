{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "48be1ec3",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:01.959806Z",
     "iopub.status.busy": "2024-09-12T08:26:01.959329Z",
     "iopub.status.idle": "2024-09-12T08:26:02.415148Z",
     "shell.execute_reply": "2024-09-12T08:26:02.413911Z"
    },
    "papermill": {
     "duration": 0.474134,
     "end_time": "2024-09-12T08:26:02.417880",
     "exception": false,
     "start_time": "2024-09-12T08:26:01.943746",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/playground-series-s4e9/sample_submission.csv\n",
      "/kaggle/input/playground-series-s4e9/train.csv\n",
      "/kaggle/input/playground-series-s4e9/test.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input/playground-series-s4e9'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b2539728",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:02.440663Z",
     "iopub.status.busy": "2024-09-12T08:26:02.440076Z",
     "iopub.status.idle": "2024-09-12T08:26:04.269300Z",
     "shell.execute_reply": "2024-09-12T08:26:04.268106Z"
    },
    "papermill": {
     "duration": 1.843552,
     "end_time": "2024-09-12T08:26:04.272209",
     "exception": false,
     "start_time": "2024-09-12T08:26:02.428657",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d59ddde6",
   "metadata": {
    "papermill": {
     "duration": 0.00972,
     "end_time": "2024-09-12T08:26:04.292391",
     "exception": false,
     "start_time": "2024-09-12T08:26:04.282671",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Importing Datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d4f8b519",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:04.314558Z",
     "iopub.status.busy": "2024-09-12T08:26:04.313963Z",
     "iopub.status.idle": "2024-09-12T08:26:05.444862Z",
     "shell.execute_reply": "2024-09-12T08:26:05.443686Z"
    },
    "papermill": {
     "duration": 1.145175,
     "end_time": "2024-09-12T08:26:05.447706",
     "exception": false,
     "start_time": "2024-09-12T08:26:04.302531",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>brand</th>\n",
       "      <th>model</th>\n",
       "      <th>model_year</th>\n",
       "      <th>milage</th>\n",
       "      <th>fuel_type</th>\n",
       "      <th>engine</th>\n",
       "      <th>transmission</th>\n",
       "      <th>ext_col</th>\n",
       "      <th>int_col</th>\n",
       "      <th>accident</th>\n",
       "      <th>clean_title</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>MINI</td>\n",
       "      <td>Cooper S Base</td>\n",
       "      <td>2007</td>\n",
       "      <td>213000</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>172.0HP 1.6L 4 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Yellow</td>\n",
       "      <td>Gray</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Lincoln</td>\n",
       "      <td>LS V8</td>\n",
       "      <td>2002</td>\n",
       "      <td>143250</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>252.0HP 3.9L 8 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Silver</td>\n",
       "      <td>Beige</td>\n",
       "      <td>At least 1 accident or damage reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>Chevrolet</td>\n",
       "      <td>Silverado 2500 LT</td>\n",
       "      <td>2002</td>\n",
       "      <td>136731</td>\n",
       "      <td>E85 Flex Fuel</td>\n",
       "      <td>320.0HP 5.3L 8 Cylinder Engine Flex Fuel Capab...</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Blue</td>\n",
       "      <td>Gray</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>13900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Genesis</td>\n",
       "      <td>G90 5.0 Ultimate</td>\n",
       "      <td>2017</td>\n",
       "      <td>19500</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>420.0HP 5.0L 8 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>Transmission w/Dual Shift Mode</td>\n",
       "      <td>Black</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>45000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>Metris Base</td>\n",
       "      <td>2021</td>\n",
       "      <td>7388</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>208.0HP 2.0L 4 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>7-Speed A/T</td>\n",
       "      <td>Black</td>\n",
       "      <td>Beige</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>97500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188528</th>\n",
       "      <td>188528</td>\n",
       "      <td>Cadillac</td>\n",
       "      <td>Escalade ESV Platinum</td>\n",
       "      <td>2017</td>\n",
       "      <td>49000</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>420.0HP 6.2L 8 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>Transmission w/Dual Shift Mode</td>\n",
       "      <td>White</td>\n",
       "      <td>Beige</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>27500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188529</th>\n",
       "      <td>188529</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>AMG C 43 AMG C 43 4MATIC</td>\n",
       "      <td>2018</td>\n",
       "      <td>28600</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>385.0HP 3.0L V6 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>8-Speed A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Black</td>\n",
       "      <td>At least 1 accident or damage reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>30000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188530</th>\n",
       "      <td>188530</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>AMG GLC 63 Base 4MATIC</td>\n",
       "      <td>2021</td>\n",
       "      <td>13650</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>469.0HP 4.0L 8 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>7-Speed A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>86900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188531</th>\n",
       "      <td>188531</td>\n",
       "      <td>Audi</td>\n",
       "      <td>S5 3.0T Prestige</td>\n",
       "      <td>2022</td>\n",
       "      <td>13895</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>3.0L</td>\n",
       "      <td>1-Speed Automatic</td>\n",
       "      <td>Daytona Gray Pearl Effect</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "      <td>84900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188532</th>\n",
       "      <td>188532</td>\n",
       "      <td>Porsche</td>\n",
       "      <td>Macan Base</td>\n",
       "      <td>2016</td>\n",
       "      <td>59500</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>252.0HP 2.0L 4 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>Transmission w/Dual Shift Mode</td>\n",
       "      <td>White</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>28995</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>188533 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id          brand                     model  model_year  milage  \\\n",
       "0            0           MINI             Cooper S Base        2007  213000   \n",
       "1            1        Lincoln                     LS V8        2002  143250   \n",
       "2            2      Chevrolet         Silverado 2500 LT        2002  136731   \n",
       "3            3        Genesis          G90 5.0 Ultimate        2017   19500   \n",
       "4            4  Mercedes-Benz               Metris Base        2021    7388   \n",
       "...        ...            ...                       ...         ...     ...   \n",
       "188528  188528       Cadillac     Escalade ESV Platinum        2017   49000   \n",
       "188529  188529  Mercedes-Benz  AMG C 43 AMG C 43 4MATIC        2018   28600   \n",
       "188530  188530  Mercedes-Benz    AMG GLC 63 Base 4MATIC        2021   13650   \n",
       "188531  188531           Audi          S5 3.0T Prestige        2022   13895   \n",
       "188532  188532        Porsche                Macan Base        2016   59500   \n",
       "\n",
       "            fuel_type                                             engine  \\\n",
       "0            Gasoline       172.0HP 1.6L 4 Cylinder Engine Gasoline Fuel   \n",
       "1            Gasoline       252.0HP 3.9L 8 Cylinder Engine Gasoline Fuel   \n",
       "2       E85 Flex Fuel  320.0HP 5.3L 8 Cylinder Engine Flex Fuel Capab...   \n",
       "3            Gasoline       420.0HP 5.0L 8 Cylinder Engine Gasoline Fuel   \n",
       "4            Gasoline       208.0HP 2.0L 4 Cylinder Engine Gasoline Fuel   \n",
       "...               ...                                                ...   \n",
       "188528       Gasoline       420.0HP 6.2L 8 Cylinder Engine Gasoline Fuel   \n",
       "188529       Gasoline      385.0HP 3.0L V6 Cylinder Engine Gasoline Fuel   \n",
       "188530       Gasoline       469.0HP 4.0L 8 Cylinder Engine Gasoline Fuel   \n",
       "188531       Gasoline                                               3.0L   \n",
       "188532       Gasoline       252.0HP 2.0L 4 Cylinder Engine Gasoline Fuel   \n",
       "\n",
       "                          transmission                    ext_col int_col  \\\n",
       "0                                  A/T                     Yellow    Gray   \n",
       "1                                  A/T                     Silver   Beige   \n",
       "2                                  A/T                       Blue    Gray   \n",
       "3       Transmission w/Dual Shift Mode                      Black   Black   \n",
       "4                          7-Speed A/T                      Black   Beige   \n",
       "...                                ...                        ...     ...   \n",
       "188528  Transmission w/Dual Shift Mode                      White   Beige   \n",
       "188529                     8-Speed A/T                      White   Black   \n",
       "188530                     7-Speed A/T                      White   Black   \n",
       "188531               1-Speed Automatic  Daytona Gray Pearl Effect   Black   \n",
       "188532  Transmission w/Dual Shift Mode                      White   Black   \n",
       "\n",
       "                                      accident clean_title  price  \n",
       "0                                None reported         Yes   4200  \n",
       "1       At least 1 accident or damage reported         Yes   4999  \n",
       "2                                None reported         Yes  13900  \n",
       "3                                None reported         Yes  45000  \n",
       "4                                None reported         Yes  97500  \n",
       "...                                        ...         ...    ...  \n",
       "188528                           None reported         Yes  27500  \n",
       "188529  At least 1 accident or damage reported         Yes  30000  \n",
       "188530                           None reported         Yes  86900  \n",
       "188531                           None reported         NaN  84900  \n",
       "188532                           None reported         Yes  28995  \n",
       "\n",
       "[188533 rows x 13 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df = pd.read_csv('/kaggle/input/playground-series-s4e9/train.csv')\n",
    "train_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b793d1a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:05.471564Z",
     "iopub.status.busy": "2024-09-12T08:26:05.471129Z",
     "iopub.status.idle": "2024-09-12T08:26:06.135849Z",
     "shell.execute_reply": "2024-09-12T08:26:06.134705Z"
    },
    "papermill": {
     "duration": 0.679561,
     "end_time": "2024-09-12T08:26:06.138447",
     "exception": false,
     "start_time": "2024-09-12T08:26:05.458886",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>brand</th>\n",
       "      <th>model</th>\n",
       "      <th>model_year</th>\n",
       "      <th>milage</th>\n",
       "      <th>fuel_type</th>\n",
       "      <th>engine</th>\n",
       "      <th>transmission</th>\n",
       "      <th>ext_col</th>\n",
       "      <th>int_col</th>\n",
       "      <th>accident</th>\n",
       "      <th>clean_title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>188533</td>\n",
       "      <td>Land</td>\n",
       "      <td>Rover LR2 Base</td>\n",
       "      <td>2015</td>\n",
       "      <td>98000</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>240.0HP 2.0L 4 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>6-Speed A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Beige</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>188534</td>\n",
       "      <td>Land</td>\n",
       "      <td>Rover Defender SE</td>\n",
       "      <td>2020</td>\n",
       "      <td>9142</td>\n",
       "      <td>Hybrid</td>\n",
       "      <td>395.0HP 3.0L Straight 6 Cylinder Engine Gasoli...</td>\n",
       "      <td>8-Speed A/T</td>\n",
       "      <td>Silver</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>188535</td>\n",
       "      <td>Ford</td>\n",
       "      <td>Expedition Limited</td>\n",
       "      <td>2022</td>\n",
       "      <td>28121</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>3.5L V6 24V PDI DOHC Twin Turbo</td>\n",
       "      <td>10-Speed Automatic</td>\n",
       "      <td>White</td>\n",
       "      <td>Ebony</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>188536</td>\n",
       "      <td>Audi</td>\n",
       "      <td>A6 2.0T Sport</td>\n",
       "      <td>2016</td>\n",
       "      <td>61258</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>2.0 Liter TFSI</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>Silician Yellow</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>188537</td>\n",
       "      <td>Audi</td>\n",
       "      <td>A6 2.0T Premium Plus</td>\n",
       "      <td>2018</td>\n",
       "      <td>59000</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>252.0HP 2.0L 4 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Gray</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125685</th>\n",
       "      <td>314218</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>GL-Class GL 450 4MATIC</td>\n",
       "      <td>2014</td>\n",
       "      <td>83315</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>362.0HP 3.0L V6 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>7-Speed A/T</td>\n",
       "      <td>Black</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125686</th>\n",
       "      <td>314219</td>\n",
       "      <td>Audi</td>\n",
       "      <td>Q7 55 Prestige</td>\n",
       "      <td>2019</td>\n",
       "      <td>29336</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>3.0 Liter Turbo</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>White</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125687</th>\n",
       "      <td>314220</td>\n",
       "      <td>Audi</td>\n",
       "      <td>A6 3.0T Premium Plus</td>\n",
       "      <td>2012</td>\n",
       "      <td>77634</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>333.0HP 3.0L V6 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Black</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125688</th>\n",
       "      <td>314221</td>\n",
       "      <td>Audi</td>\n",
       "      <td>Q7 3.0T Premium</td>\n",
       "      <td>2012</td>\n",
       "      <td>112000</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>333.0HP 3.0L V6 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Black</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125689</th>\n",
       "      <td>314222</td>\n",
       "      <td>Chevrolet</td>\n",
       "      <td>Tahoe LT</td>\n",
       "      <td>2018</td>\n",
       "      <td>66840</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>355.0HP 5.3L 8 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Silver</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>125690 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id          brand                   model  model_year  milage  \\\n",
       "0       188533           Land          Rover LR2 Base        2015   98000   \n",
       "1       188534           Land       Rover Defender SE        2020    9142   \n",
       "2       188535           Ford      Expedition Limited        2022   28121   \n",
       "3       188536           Audi           A6 2.0T Sport        2016   61258   \n",
       "4       188537           Audi    A6 2.0T Premium Plus        2018   59000   \n",
       "...        ...            ...                     ...         ...     ...   \n",
       "125685  314218  Mercedes-Benz  GL-Class GL 450 4MATIC        2014   83315   \n",
       "125686  314219           Audi          Q7 55 Prestige        2019   29336   \n",
       "125687  314220           Audi    A6 3.0T Premium Plus        2012   77634   \n",
       "125688  314221           Audi         Q7 3.0T Premium        2012  112000   \n",
       "125689  314222      Chevrolet                Tahoe LT        2018   66840   \n",
       "\n",
       "       fuel_type                                             engine  \\\n",
       "0       Gasoline       240.0HP 2.0L 4 Cylinder Engine Gasoline Fuel   \n",
       "1         Hybrid  395.0HP 3.0L Straight 6 Cylinder Engine Gasoli...   \n",
       "2       Gasoline                    3.5L V6 24V PDI DOHC Twin Turbo   \n",
       "3       Gasoline                                     2.0 Liter TFSI   \n",
       "4       Gasoline       252.0HP 2.0L 4 Cylinder Engine Gasoline Fuel   \n",
       "...          ...                                                ...   \n",
       "125685  Gasoline      362.0HP 3.0L V6 Cylinder Engine Gasoline Fuel   \n",
       "125686  Gasoline                                    3.0 Liter Turbo   \n",
       "125687  Gasoline      333.0HP 3.0L V6 Cylinder Engine Gasoline Fuel   \n",
       "125688  Gasoline      333.0HP 3.0L V6 Cylinder Engine Gasoline Fuel   \n",
       "125689  Gasoline       355.0HP 5.3L 8 Cylinder Engine Gasoline Fuel   \n",
       "\n",
       "              transmission          ext_col int_col       accident clean_title  \n",
       "0              6-Speed A/T            White   Beige  None reported         Yes  \n",
       "1              8-Speed A/T           Silver   Black  None reported         Yes  \n",
       "2       10-Speed Automatic            White   Ebony  None reported         NaN  \n",
       "3                Automatic  Silician Yellow   Black  None reported         NaN  \n",
       "4                      A/T             Gray   Black  None reported         Yes  \n",
       "...                    ...              ...     ...            ...         ...  \n",
       "125685         7-Speed A/T            Black   Black  None reported         Yes  \n",
       "125686           Automatic            White   Black  None reported         NaN  \n",
       "125687                 A/T            Black   Black  None reported         Yes  \n",
       "125688                 A/T            Black   Black  None reported         Yes  \n",
       "125689                 A/T           Silver   Black  None reported         Yes  \n",
       "\n",
       "[125690 rows x 12 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_df = pd.read_csv('/kaggle/input/playground-series-s4e9/test.csv')\n",
    "test_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ce53f5d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:06.163690Z",
     "iopub.status.busy": "2024-09-12T08:26:06.163193Z",
     "iopub.status.idle": "2024-09-12T08:26:06.221446Z",
     "shell.execute_reply": "2024-09-12T08:26:06.220331Z"
    },
    "papermill": {
     "duration": 0.074453,
     "end_time": "2024-09-12T08:26:06.224475",
     "exception": false,
     "start_time": "2024-09-12T08:26:06.150022",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>id</th>\n",
       "      <td>188533.0</td>\n",
       "      <td>94266.000000</td>\n",
       "      <td>54424.933488</td>\n",
       "      <td>0.0</td>\n",
       "      <td>47133.0</td>\n",
       "      <td>94266.0</td>\n",
       "      <td>141399.0</td>\n",
       "      <td>188532.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>model_year</th>\n",
       "      <td>188533.0</td>\n",
       "      <td>2015.829998</td>\n",
       "      <td>5.660967</td>\n",
       "      <td>1974.0</td>\n",
       "      <td>2013.0</td>\n",
       "      <td>2017.0</td>\n",
       "      <td>2020.0</td>\n",
       "      <td>2024.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>milage</th>\n",
       "      <td>188533.0</td>\n",
       "      <td>65705.295174</td>\n",
       "      <td>49798.158076</td>\n",
       "      <td>100.0</td>\n",
       "      <td>24115.0</td>\n",
       "      <td>57785.0</td>\n",
       "      <td>95400.0</td>\n",
       "      <td>405000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>price</th>\n",
       "      <td>188533.0</td>\n",
       "      <td>43878.016178</td>\n",
       "      <td>78819.522254</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>17000.0</td>\n",
       "      <td>30825.0</td>\n",
       "      <td>49900.0</td>\n",
       "      <td>2954083.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               count          mean           std     min      25%      50%  \\\n",
       "id          188533.0  94266.000000  54424.933488     0.0  47133.0  94266.0   \n",
       "model_year  188533.0   2015.829998      5.660967  1974.0   2013.0   2017.0   \n",
       "milage      188533.0  65705.295174  49798.158076   100.0  24115.0  57785.0   \n",
       "price       188533.0  43878.016178  78819.522254  2000.0  17000.0  30825.0   \n",
       "\n",
       "                 75%        max  \n",
       "id          141399.0   188532.0  \n",
       "model_year    2020.0     2024.0  \n",
       "milage       95400.0   405000.0  \n",
       "price        49900.0  2954083.0  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.describe().T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0c21d6ca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:06.250274Z",
     "iopub.status.busy": "2024-09-12T08:26:06.249813Z",
     "iopub.status.idle": "2024-09-12T08:26:06.453561Z",
     "shell.execute_reply": "2024-09-12T08:26:06.451863Z"
    },
    "papermill": {
     "duration": 0.219825,
     "end_time": "2024-09-12T08:26:06.456269",
     "exception": false,
     "start_time": "2024-09-12T08:26:06.236444",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 188533 entries, 0 to 188532\n",
      "Data columns (total 13 columns):\n",
      " #   Column        Non-Null Count   Dtype \n",
      "---  ------        --------------   ----- \n",
      " 0   id            188533 non-null  int64 \n",
      " 1   brand         188533 non-null  object\n",
      " 2   model         188533 non-null  object\n",
      " 3   model_year    188533 non-null  int64 \n",
      " 4   milage        188533 non-null  int64 \n",
      " 5   fuel_type     183450 non-null  object\n",
      " 6   engine        188533 non-null  object\n",
      " 7   transmission  188533 non-null  object\n",
      " 8   ext_col       188533 non-null  object\n",
      " 9   int_col       188533 non-null  object\n",
      " 10  accident      186081 non-null  object\n",
      " 11  clean_title   167114 non-null  object\n",
      " 12  price         188533 non-null  int64 \n",
      "dtypes: int64(4), object(9)\n",
      "memory usage: 18.7+ MB\n"
     ]
    }
   ],
   "source": [
    "train_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "160c7e41",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:06.481703Z",
     "iopub.status.busy": "2024-09-12T08:26:06.481229Z",
     "iopub.status.idle": "2024-09-12T08:26:06.530575Z",
     "shell.execute_reply": "2024-09-12T08:26:06.529405Z"
    },
    "papermill": {
     "duration": 0.065156,
     "end_time": "2024-09-12T08:26:06.533279",
     "exception": false,
     "start_time": "2024-09-12T08:26:06.468123",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>brand</th>\n",
       "      <th>model</th>\n",
       "      <th>model_year</th>\n",
       "      <th>milage</th>\n",
       "      <th>fuel_type</th>\n",
       "      <th>engine</th>\n",
       "      <th>transmission</th>\n",
       "      <th>ext_col</th>\n",
       "      <th>int_col</th>\n",
       "      <th>accident</th>\n",
       "      <th>clean_title</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>11</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model S P100D</td>\n",
       "      <td>2015</td>\n",
       "      <td>81500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Electric Motor Electric Fuel System</td>\n",
       "      <td>1-Speed A/T</td>\n",
       "      <td>Gray</td>\n",
       "      <td>White</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>19000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>32</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model S P100D</td>\n",
       "      <td>2018</td>\n",
       "      <td>30300</td>\n",
       "      <td>NaN</td>\n",
       "      <td>518.0HP Electric Motor Electric Fuel System</td>\n",
       "      <td>A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>White</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>64000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>51</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model 3 Long Range</td>\n",
       "      <td>2020</td>\n",
       "      <td>38360</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Dual Motor - Standard</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>White</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "      <td>59598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>52</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model X 75D</td>\n",
       "      <td>2021</td>\n",
       "      <td>88000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>518.0HP Electric Motor Electric Fuel System</td>\n",
       "      <td>1-Speed A/T</td>\n",
       "      <td>Black</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>53600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>161</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model S Long Range</td>\n",
       "      <td>2021</td>\n",
       "      <td>9500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>670.0HP Electric Motor Electric Fuel System</td>\n",
       "      <td>A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Beige</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>89999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188368</th>\n",
       "      <td>188368</td>\n",
       "      <td>Ford</td>\n",
       "      <td>Mustang Mach-E Premium</td>\n",
       "      <td>2022</td>\n",
       "      <td>2058</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Standard Range Battery</td>\n",
       "      <td>Automatic CVT</td>\n",
       "      <td>Red</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "      <td>27785</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188455</th>\n",
       "      <td>188455</td>\n",
       "      <td>Ford</td>\n",
       "      <td>Mustang Mach-E GT</td>\n",
       "      <td>2022</td>\n",
       "      <td>8000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>480.0HP Electric Motor Electric Fuel System</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Orange</td>\n",
       "      <td>White</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>115000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188462</th>\n",
       "      <td>188462</td>\n",
       "      <td>Ford</td>\n",
       "      <td>Mustang Mach-E GT</td>\n",
       "      <td>2023</td>\n",
       "      <td>9000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>480.0HP Electric Motor Electric Fuel System</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Orange</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>85000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188484</th>\n",
       "      <td>188484</td>\n",
       "      <td>Ford</td>\n",
       "      <td>Model X P100D</td>\n",
       "      <td>2018</td>\n",
       "      <td>52000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>534.0HP Electric Motor Electric Fuel System</td>\n",
       "      <td>1-Speed A/T</td>\n",
       "      <td>Gray</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>45000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188489</th>\n",
       "      <td>188489</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model X Long Range Plus</td>\n",
       "      <td>2022</td>\n",
       "      <td>4786</td>\n",
       "      <td>NaN</td>\n",
       "      <td>557.0HP Electric Motor Electric Fuel System</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Black</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>92000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5083 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id  brand                    model  model_year  milage fuel_type  \\\n",
       "11          11  Tesla            Model S P100D        2015   81500       NaN   \n",
       "32          32  Tesla            Model S P100D        2018   30300       NaN   \n",
       "51          51  Tesla       Model 3 Long Range        2020   38360       NaN   \n",
       "52          52  Tesla              Model X 75D        2021   88000       NaN   \n",
       "161        161  Tesla       Model S Long Range        2021    9500       NaN   \n",
       "...        ...    ...                      ...         ...     ...       ...   \n",
       "188368  188368   Ford   Mustang Mach-E Premium        2022    2058       NaN   \n",
       "188455  188455   Ford        Mustang Mach-E GT        2022    8000       NaN   \n",
       "188462  188462   Ford        Mustang Mach-E GT        2023    9000       NaN   \n",
       "188484  188484   Ford            Model X P100D        2018   52000       NaN   \n",
       "188489  188489  Tesla  Model X Long Range Plus        2022    4786       NaN   \n",
       "\n",
       "                                             engine   transmission ext_col  \\\n",
       "11              Electric Motor Electric Fuel System    1-Speed A/T    Gray   \n",
       "32      518.0HP Electric Motor Electric Fuel System            A/T   White   \n",
       "51                            Dual Motor - Standard      Automatic   White   \n",
       "52      518.0HP Electric Motor Electric Fuel System    1-Speed A/T   Black   \n",
       "161     670.0HP Electric Motor Electric Fuel System            A/T   White   \n",
       "...                                             ...            ...     ...   \n",
       "188368                       Standard Range Battery  Automatic CVT     Red   \n",
       "188455  480.0HP Electric Motor Electric Fuel System            A/T  Orange   \n",
       "188462  480.0HP Electric Motor Electric Fuel System            A/T  Orange   \n",
       "188484  534.0HP Electric Motor Electric Fuel System    1-Speed A/T    Gray   \n",
       "188489  557.0HP Electric Motor Electric Fuel System            A/T   Black   \n",
       "\n",
       "       int_col       accident clean_title   price  \n",
       "11       White  None reported         Yes   19000  \n",
       "32       White  None reported         Yes   64000  \n",
       "51       Black  None reported         NaN   59598  \n",
       "52       Black  None reported         Yes   53600  \n",
       "161      Beige  None reported         Yes   89999  \n",
       "...        ...            ...         ...     ...  \n",
       "188368   Black  None reported         NaN   27785  \n",
       "188455   White  None reported         Yes  115000  \n",
       "188462   Black  None reported         Yes   85000  \n",
       "188484   Black  None reported         Yes   45000  \n",
       "188489   Black  None reported         Yes   92000  \n",
       "\n",
       "[5083 rows x 13 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df[train_df['fuel_type'].isna()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "c338807a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:06.561389Z",
     "iopub.status.busy": "2024-09-12T08:26:06.560887Z",
     "iopub.status.idle": "2024-09-12T08:26:06.602362Z",
     "shell.execute_reply": "2024-09-12T08:26:06.601170Z"
    },
    "papermill": {
     "duration": 0.058359,
     "end_time": "2024-09-12T08:26:06.604753",
     "exception": false,
     "start_time": "2024-09-12T08:26:06.546394",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "fuel_type\n",
       "Gasoline          165940\n",
       "Hybrid              6832\n",
       "E85 Flex Fuel       5406\n",
       "Diesel              3955\n",
       "–                    781\n",
       "Plug-In Hybrid       521\n",
       "not supported         15\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df['fuel_type'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "de2e3938",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:06.630980Z",
     "iopub.status.busy": "2024-09-12T08:26:06.630544Z",
     "iopub.status.idle": "2024-09-12T08:26:06.719554Z",
     "shell.execute_reply": "2024-09-12T08:26:06.718506Z"
    },
    "papermill": {
     "duration": 0.105055,
     "end_time": "2024-09-12T08:26:06.722050",
     "exception": false,
     "start_time": "2024-09-12T08:26:06.616995",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>brand</th>\n",
       "      <th>model</th>\n",
       "      <th>model_year</th>\n",
       "      <th>milage</th>\n",
       "      <th>fuel_type</th>\n",
       "      <th>engine</th>\n",
       "      <th>transmission</th>\n",
       "      <th>ext_col</th>\n",
       "      <th>int_col</th>\n",
       "      <th>accident</th>\n",
       "      <th>clean_title</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>532</th>\n",
       "      <td>532</td>\n",
       "      <td>Dodge</td>\n",
       "      <td>Challenger R/T Scat Pack</td>\n",
       "      <td>2021</td>\n",
       "      <td>35000</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>8-Speed A/T</td>\n",
       "      <td>Blue</td>\n",
       "      <td>Gray</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>48000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1155</th>\n",
       "      <td>1155</td>\n",
       "      <td>Ford</td>\n",
       "      <td>Mustang GT Premium</td>\n",
       "      <td>2017</td>\n",
       "      <td>143600</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>6-Speed M/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Black</td>\n",
       "      <td>At least 1 accident or damage reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>31000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1307</th>\n",
       "      <td>1307</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>Land Cruiser Base</td>\n",
       "      <td>1994</td>\n",
       "      <td>138033</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Green</td>\n",
       "      <td>Beige</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>11999</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1362</th>\n",
       "      <td>1362</td>\n",
       "      <td>Ford</td>\n",
       "      <td>Mustang EcoBoost Premium</td>\n",
       "      <td>2016</td>\n",
       "      <td>43000</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Blue</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>15500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1741</th>\n",
       "      <td>1741</td>\n",
       "      <td>Chevrolet</td>\n",
       "      <td>Protege DX</td>\n",
       "      <td>1993</td>\n",
       "      <td>94200</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Red</td>\n",
       "      <td>Gray</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>7599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187215</th>\n",
       "      <td>187215</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>200 Limited</td>\n",
       "      <td>2017</td>\n",
       "      <td>100600</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Black</td>\n",
       "      <td>Black</td>\n",
       "      <td>At least 1 accident or damage reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>15000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187399</th>\n",
       "      <td>187399</td>\n",
       "      <td>Mazda</td>\n",
       "      <td>MX-5 Miata Base</td>\n",
       "      <td>1993</td>\n",
       "      <td>90200</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>5-Speed M/T</td>\n",
       "      <td>Gray</td>\n",
       "      <td>Black</td>\n",
       "      <td>At least 1 accident or damage reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>11500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187664</th>\n",
       "      <td>187664</td>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>SLS AMG Base</td>\n",
       "      <td>1993</td>\n",
       "      <td>14586</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Red</td>\n",
       "      <td>Silver</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>65000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>187820</th>\n",
       "      <td>187820</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>Pacifica Touring</td>\n",
       "      <td>2017</td>\n",
       "      <td>57300</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>9-Speed A/T</td>\n",
       "      <td>Blue</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>31700</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188189</th>\n",
       "      <td>188189</td>\n",
       "      <td>Chrysler</td>\n",
       "      <td>300 Touring</td>\n",
       "      <td>1994</td>\n",
       "      <td>79785</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Green</td>\n",
       "      <td>Beige</td>\n",
       "      <td>At least 1 accident or damage reported</td>\n",
       "      <td>Yes</td>\n",
       "      <td>9499</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>772 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id          brand                     model  model_year  milage  \\\n",
       "532        532          Dodge  Challenger R/T Scat Pack        2021   35000   \n",
       "1155      1155           Ford        Mustang GT Premium        2017  143600   \n",
       "1307      1307         Toyota         Land Cruiser Base        1994  138033   \n",
       "1362      1362           Ford  Mustang EcoBoost Premium        2016   43000   \n",
       "1741      1741      Chevrolet                Protege DX        1993   94200   \n",
       "...        ...            ...                       ...         ...     ...   \n",
       "187215  187215       Chrysler               200 Limited        2017  100600   \n",
       "187399  187399          Mazda           MX-5 Miata Base        1993   90200   \n",
       "187664  187664  Mercedes-Benz              SLS AMG Base        1993   14586   \n",
       "187820  187820       Chrysler          Pacifica Touring        2017   57300   \n",
       "188189  188189       Chrysler               300 Touring        1994   79785   \n",
       "\n",
       "       fuel_type engine transmission ext_col int_col  \\\n",
       "532            –      –  8-Speed A/T    Blue    Gray   \n",
       "1155           –      –  6-Speed M/T   White   Black   \n",
       "1307           –      –          A/T   Green   Beige   \n",
       "1362           –      –          A/T    Blue   Black   \n",
       "1741           –      –          A/T     Red    Gray   \n",
       "...          ...    ...          ...     ...     ...   \n",
       "187215         –      –          A/T   Black   Black   \n",
       "187399         –      –  5-Speed M/T    Gray   Black   \n",
       "187664         –      –          A/T     Red  Silver   \n",
       "187820         –      –  9-Speed A/T    Blue   Black   \n",
       "188189         –      –          A/T   Green   Beige   \n",
       "\n",
       "                                      accident clean_title  price  \n",
       "532                              None reported         Yes  48000  \n",
       "1155    At least 1 accident or damage reported         Yes  31000  \n",
       "1307                             None reported         Yes  11999  \n",
       "1362                             None reported         Yes  15500  \n",
       "1741                             None reported         Yes   7599  \n",
       "...                                        ...         ...    ...  \n",
       "187215  At least 1 accident or damage reported         Yes  15000  \n",
       "187399  At least 1 accident or damage reported         Yes  11500  \n",
       "187664                           None reported         Yes  65000  \n",
       "187820                           None reported         Yes  31700  \n",
       "188189  At least 1 accident or damage reported         Yes   9499  \n",
       "\n",
       "[772 rows x 13 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df[(train_df['fuel_type'] == '–') & (train_df['engine'] == '–') ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "9ccbc4db",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:06.750402Z",
     "iopub.status.busy": "2024-09-12T08:26:06.749483Z",
     "iopub.status.idle": "2024-09-12T08:26:06.783789Z",
     "shell.execute_reply": "2024-09-12T08:26:06.782694Z"
    },
    "papermill": {
     "duration": 0.051257,
     "end_time": "2024-09-12T08:26:06.786578",
     "exception": false,
     "start_time": "2024-09-12T08:26:06.735321",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['172.0HP 1.6L 4 Cylinder Engine Gasoline Fuel',\n",
       "       '252.0HP 3.9L 8 Cylinder Engine Gasoline Fuel',\n",
       "       '320.0HP 5.3L 8 Cylinder Engine Flex Fuel Capability', ...,\n",
       "       '78.0HP 1.2L 3 Cylinder Engine Gasoline Fuel',\n",
       "       '139.0HP 1.6L 4 Cylinder Engine Plug-In Electric/Gas',\n",
       "       '313.0HP 2.0L 4 Cylinder Engine Plug-In Electric/Gas'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df['engine'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "93fb73a2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:06.814643Z",
     "iopub.status.busy": "2024-09-12T08:26:06.814199Z",
     "iopub.status.idle": "2024-09-12T08:26:06.823861Z",
     "shell.execute_reply": "2024-09-12T08:26:06.822675Z"
    },
    "papermill": {
     "duration": 0.026676,
     "end_time": "2024-09-12T08:26:06.826209",
     "exception": false,
     "start_time": "2024-09-12T08:26:06.799533",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def fill_fuel_type(x):\n",
    "    if pd.isnull(x['fuel_type']) or x['fuel_type'] == '–' or x['fuel_type'] == 'not supported':\n",
    "        if ('hybrid' in x['engine'].lower()) and ('plug-in' in x['engine'].lower()):\n",
    "            return 'Plug-In Hybrid'\n",
    "        elif 'gasoline' in x['engine'].lower():\n",
    "            return 'Gasoline'\n",
    "        elif 'diesel'in x['engine'].lower():\n",
    "            return 'Diesel'\n",
    "        elif 'hybrid' in x['engine'].lower() and ('gasoline' in x['engine'].lower() or 'diesel' in x['engine'].lower() or 'plug-in' in x['engine'].lower()):\n",
    "            return 'Hybrid'\n",
    "        elif 'flex fuel' in x['engine'].lower():\n",
    "            return 'E85 Flex Fuel'\n",
    "        elif 'electric' in x['engine'].lower():\n",
    "            return 'Electric'\n",
    "    return x['fuel_type']\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "d16611ec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:06.854370Z",
     "iopub.status.busy": "2024-09-12T08:26:06.853897Z",
     "iopub.status.idle": "2024-09-12T08:26:12.347254Z",
     "shell.execute_reply": "2024-09-12T08:26:12.345892Z"
    },
    "papermill": {
     "duration": 5.510692,
     "end_time": "2024-09-12T08:26:12.350177",
     "exception": false,
     "start_time": "2024-09-12T08:26:06.839485",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_df['fuel_type'] = train_df.apply(fill_fuel_type, axis=1)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "7c4db954",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:12.378256Z",
     "iopub.status.busy": "2024-09-12T08:26:12.377797Z",
     "iopub.status.idle": "2024-09-12T08:26:12.422432Z",
     "shell.execute_reply": "2024-09-12T08:26:12.421261Z"
    },
    "papermill": {
     "duration": 0.061644,
     "end_time": "2024-09-12T08:26:12.425106",
     "exception": false,
     "start_time": "2024-09-12T08:26:12.363462",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>brand</th>\n",
       "      <th>model</th>\n",
       "      <th>model_year</th>\n",
       "      <th>milage</th>\n",
       "      <th>fuel_type</th>\n",
       "      <th>engine</th>\n",
       "      <th>transmission</th>\n",
       "      <th>ext_col</th>\n",
       "      <th>int_col</th>\n",
       "      <th>accident</th>\n",
       "      <th>clean_title</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>51</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model 3 Long Range</td>\n",
       "      <td>2020</td>\n",
       "      <td>38360</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Dual Motor - Standard</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>White</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "      <td>59598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7233</th>\n",
       "      <td>7233</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model Y Long Range</td>\n",
       "      <td>2021</td>\n",
       "      <td>35315</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Dual Motor - Standard</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>Silver</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "      <td>47598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7362</th>\n",
       "      <td>7362</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model S 85D</td>\n",
       "      <td>2015</td>\n",
       "      <td>75897</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Dual Motor - Standard</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>Silver</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "      <td>18998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7807</th>\n",
       "      <td>7807</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model 3 Long Range</td>\n",
       "      <td>2020</td>\n",
       "      <td>30455</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Dual Motor - Standard</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>Silver</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "      <td>39798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8879</th>\n",
       "      <td>8879</td>\n",
       "      <td>Audi</td>\n",
       "      <td>Q5 S line Premium Plus</td>\n",
       "      <td>2016</td>\n",
       "      <td>35315</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0 Liter TFSI</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>Daytona Gray</td>\n",
       "      <td>Black</td>\n",
       "      <td>At least 1 accident or damage reported</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>181999</th>\n",
       "      <td>181999</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model X Long Range</td>\n",
       "      <td>2021</td>\n",
       "      <td>5121</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Dual Motor - Standard</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Silver</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "      <td>69790</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>182517</th>\n",
       "      <td>182517</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model X Long Range Plus</td>\n",
       "      <td>2022</td>\n",
       "      <td>3921</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Dual Motor - Standard</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>Blue</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "      <td>50998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>183647</th>\n",
       "      <td>183647</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model Y Long Range</td>\n",
       "      <td>2019</td>\n",
       "      <td>20906</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Dual Motor - Standard</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>Silver</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "      <td>65998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>186509</th>\n",
       "      <td>186509</td>\n",
       "      <td>Tesla</td>\n",
       "      <td>Model X Long Range Plus</td>\n",
       "      <td>2021</td>\n",
       "      <td>25240</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5.0 Liter</td>\n",
       "      <td>Automatic</td>\n",
       "      <td>White</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "      <td>39998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188368</th>\n",
       "      <td>188368</td>\n",
       "      <td>Ford</td>\n",
       "      <td>Mustang Mach-E Premium</td>\n",
       "      <td>2022</td>\n",
       "      <td>2058</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Standard Range Battery</td>\n",
       "      <td>Automatic CVT</td>\n",
       "      <td>Red</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "      <td>27785</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>177 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id  brand                    model  model_year  milage fuel_type  \\\n",
       "51          51  Tesla       Model 3 Long Range        2020   38360       NaN   \n",
       "7233      7233  Tesla       Model Y Long Range        2021   35315       NaN   \n",
       "7362      7362  Tesla              Model S 85D        2015   75897       NaN   \n",
       "7807      7807  Tesla       Model 3 Long Range        2020   30455       NaN   \n",
       "8879      8879   Audi   Q5 S line Premium Plus        2016   35315       NaN   \n",
       "...        ...    ...                      ...         ...     ...       ...   \n",
       "181999  181999  Tesla       Model X Long Range        2021    5121       NaN   \n",
       "182517  182517  Tesla  Model X Long Range Plus        2022    3921       NaN   \n",
       "183647  183647  Tesla       Model Y Long Range        2019   20906       NaN   \n",
       "186509  186509  Tesla  Model X Long Range Plus        2021   25240       NaN   \n",
       "188368  188368   Ford   Mustang Mach-E Premium        2022    2058       NaN   \n",
       "\n",
       "                        engine   transmission       ext_col int_col  \\\n",
       "51       Dual Motor - Standard      Automatic         White   Black   \n",
       "7233     Dual Motor - Standard      Automatic        Silver   Black   \n",
       "7362     Dual Motor - Standard      Automatic        Silver   Black   \n",
       "7807     Dual Motor - Standard      Automatic        Silver   Black   \n",
       "8879            2.0 Liter TFSI      Automatic  Daytona Gray   Black   \n",
       "...                        ...            ...           ...     ...   \n",
       "181999   Dual Motor - Standard            A/T        Silver   Black   \n",
       "182517   Dual Motor - Standard      Automatic          Blue   Black   \n",
       "183647   Dual Motor - Standard      Automatic        Silver   Black   \n",
       "186509               5.0 Liter      Automatic         White   Black   \n",
       "188368  Standard Range Battery  Automatic CVT           Red   Black   \n",
       "\n",
       "                                      accident clean_title  price  \n",
       "51                               None reported         NaN  59598  \n",
       "7233                             None reported         NaN  47598  \n",
       "7362                             None reported         NaN  18998  \n",
       "7807                             None reported         NaN  39798  \n",
       "8879    At least 1 accident or damage reported         NaN  17498  \n",
       "...                                        ...         ...    ...  \n",
       "181999                           None reported         NaN  69790  \n",
       "182517                           None reported         NaN  50998  \n",
       "183647                           None reported         NaN  65998  \n",
       "186509                           None reported         NaN  39998  \n",
       "188368                           None reported         NaN  27785  \n",
       "\n",
       "[177 rows x 13 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df[train_df['fuel_type'].isna()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "be837fef",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:12.454196Z",
     "iopub.status.busy": "2024-09-12T08:26:12.453679Z",
     "iopub.status.idle": "2024-09-12T08:26:12.486173Z",
     "shell.execute_reply": "2024-09-12T08:26:12.484847Z"
    },
    "papermill": {
     "duration": 0.049885,
     "end_time": "2024-09-12T08:26:12.488586",
     "exception": false,
     "start_time": "2024-09-12T08:26:12.438701",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "brand\n",
       "Tesla            96\n",
       "Ford             31\n",
       "Rivian           11\n",
       "Kia              10\n",
       "Audi              5\n",
       "Mercedes-Benz     4\n",
       "BMW               3\n",
       "Nissan            2\n",
       "RAM               2\n",
       "Dodge             1\n",
       "Acura             1\n",
       "Porsche           1\n",
       "Ferrari           1\n",
       "FIAT              1\n",
       "Land              1\n",
       "Toyota            1\n",
       "Bentley           1\n",
       "MINI              1\n",
       "Volkswagen        1\n",
       "Hyundai           1\n",
       "Jaguar            1\n",
       "Karma             1\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "no_fueltype = train_df[train_df['fuel_type'].isna()]\n",
    "no_fueltype['brand'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "6bc4e315",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:12.517967Z",
     "iopub.status.busy": "2024-09-12T08:26:12.517512Z",
     "iopub.status.idle": "2024-09-12T08:26:12.592495Z",
     "shell.execute_reply": "2024-09-12T08:26:12.591346Z"
    },
    "papermill": {
     "duration": 0.092641,
     "end_time": "2024-09-12T08:26:12.594925",
     "exception": false,
     "start_time": "2024-09-12T08:26:12.502284",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "no_engine_data = (train_df['fuel_type'] == '–') & (train_df['engine'] == '–')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "2bfeb898",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:12.624513Z",
     "iopub.status.busy": "2024-09-12T08:26:12.624081Z",
     "iopub.status.idle": "2024-09-12T08:26:12.653806Z",
     "shell.execute_reply": "2024-09-12T08:26:12.652572Z"
    },
    "papermill": {
     "duration": 0.047819,
     "end_time": "2024-09-12T08:26:12.656784",
     "exception": false,
     "start_time": "2024-09-12T08:26:12.608965",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_df = train_df[~no_engine_data]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "9fa640ed",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:12.686827Z",
     "iopub.status.busy": "2024-09-12T08:26:12.685576Z",
     "iopub.status.idle": "2024-09-12T08:26:12.708287Z",
     "shell.execute_reply": "2024-09-12T08:26:12.707221Z"
    },
    "papermill": {
     "duration": 0.040588,
     "end_time": "2024-09-12T08:26:12.711017",
     "exception": false,
     "start_time": "2024-09-12T08:26:12.670429",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['None reported', 'At least 1 accident or damage reported', nan],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df['accident'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e714bfa5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:12.740694Z",
     "iopub.status.busy": "2024-09-12T08:26:12.740212Z",
     "iopub.status.idle": "2024-09-12T08:26:12.762532Z",
     "shell.execute_reply": "2024-09-12T08:26:12.761349Z"
    },
    "papermill": {
     "duration": 0.039912,
     "end_time": "2024-09-12T08:26:12.764852",
     "exception": false,
     "start_time": "2024-09-12T08:26:12.724940",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Yes', nan], dtype=object)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df['clean_title'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "4941c4da",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:12.795137Z",
     "iopub.status.busy": "2024-09-12T08:26:12.794696Z",
     "iopub.status.idle": "2024-09-12T08:26:12.826454Z",
     "shell.execute_reply": "2024-09-12T08:26:12.825387Z"
    },
    "papermill": {
     "duration": 0.049776,
     "end_time": "2024-09-12T08:26:12.829103",
     "exception": false,
     "start_time": "2024-09-12T08:26:12.779327",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_17/3283790473.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  train_df['clean_title'] = train_df['clean_title'].fillna('No')\n"
     ]
    }
   ],
   "source": [
    "train_df['clean_title'] = train_df['clean_title'].fillna('No')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "553e6408",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:12.859543Z",
     "iopub.status.busy": "2024-09-12T08:26:12.859089Z",
     "iopub.status.idle": "2024-09-12T08:26:13.053181Z",
     "shell.execute_reply": "2024-09-12T08:26:13.051679Z"
    },
    "papermill": {
     "duration": 0.212772,
     "end_time": "2024-09-12T08:26:13.056123",
     "exception": false,
     "start_time": "2024-09-12T08:26:12.843351",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 187761 entries, 0 to 188532\n",
      "Data columns (total 13 columns):\n",
      " #   Column        Non-Null Count   Dtype \n",
      "---  ------        --------------   ----- \n",
      " 0   id            187761 non-null  int64 \n",
      " 1   brand         187761 non-null  object\n",
      " 2   model         187761 non-null  object\n",
      " 3   model_year    187761 non-null  int64 \n",
      " 4   milage        187761 non-null  int64 \n",
      " 5   fuel_type     187584 non-null  object\n",
      " 6   engine        187761 non-null  object\n",
      " 7   transmission  187761 non-null  object\n",
      " 8   ext_col       187761 non-null  object\n",
      " 9   int_col       187761 non-null  object\n",
      " 10  accident      185326 non-null  object\n",
      " 11  clean_title   187761 non-null  object\n",
      " 12  price         187761 non-null  int64 \n",
      "dtypes: int64(4), object(9)\n",
      "memory usage: 20.1+ MB\n"
     ]
    }
   ],
   "source": [
    "train_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "f8bcdd83",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:13.086818Z",
     "iopub.status.busy": "2024-09-12T08:26:13.086340Z",
     "iopub.status.idle": "2024-09-12T08:26:13.239127Z",
     "shell.execute_reply": "2024-09-12T08:26:13.237948Z"
    },
    "papermill": {
     "duration": 0.171312,
     "end_time": "2024-09-12T08:26:13.241755",
     "exception": false,
     "start_time": "2024-09-12T08:26:13.070443",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_17/417574307.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  train_df['Involved in Accident'] = train_df['accident'].apply(lambda x: 1 if x == 'At least 1 accident or damage reported' else 0)\n"
     ]
    }
   ],
   "source": [
    "train_df['Involved in Accident'] = train_df['accident'].apply(lambda x: 1 if x == 'At least 1 accident or damage reported' else 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "9c6851bc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:13.272468Z",
     "iopub.status.busy": "2024-09-12T08:26:13.272014Z",
     "iopub.status.idle": "2024-09-12T08:26:13.301414Z",
     "shell.execute_reply": "2024-09-12T08:26:13.300208Z"
    },
    "papermill": {
     "duration": 0.048351,
     "end_time": "2024-09-12T08:26:13.304625",
     "exception": false,
     "start_time": "2024-09-12T08:26:13.256274",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_17/1241611614.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  train_df.drop(columns = ['id','accident'], inplace = True)\n"
     ]
    }
   ],
   "source": [
    "train_df.drop(columns = ['id','accident'], inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "eeacbf04",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:13.335478Z",
     "iopub.status.busy": "2024-09-12T08:26:13.335044Z",
     "iopub.status.idle": "2024-09-12T08:26:13.377815Z",
     "shell.execute_reply": "2024-09-12T08:26:13.376645Z"
    },
    "papermill": {
     "duration": 0.061007,
     "end_time": "2024-09-12T08:26:13.380231",
     "exception": false,
     "start_time": "2024-09-12T08:26:13.319224",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "transmission\n",
       "A/T                                                   49523\n",
       "8-Speed A/T                                           20625\n",
       "Transmission w/Dual Shift Mode                        19223\n",
       "6-Speed A/T                                           18025\n",
       "6-Speed M/T                                           11897\n",
       "7-Speed A/T                                           11117\n",
       "Automatic                                             10688\n",
       "8-Speed Automatic                                      8431\n",
       "10-Speed A/T                                           8035\n",
       "9-Speed A/T                                            3858\n",
       "5-Speed A/T                                            3187\n",
       "10-Speed Automatic                                     3164\n",
       "6-Speed Automatic                                      2798\n",
       "4-Speed A/T                                            2481\n",
       "5-Speed M/T                                            2343\n",
       "9-Speed Automatic                                      2325\n",
       "CVT Transmission                                       1986\n",
       "1-Speed A/T                                            1866\n",
       "7-Speed Automatic with Auto-Shift                      1172\n",
       "M/T                                                    1171\n",
       "Automatic CVT                                           828\n",
       "8-Speed Automatic with Auto-Shift                       548\n",
       "1-Speed Automatic                                       365\n",
       "7-Speed M/T                                             354\n",
       "6-Speed Manual                                          211\n",
       "7-Speed Automatic                                       178\n",
       "5-Speed Automatic                                       159\n",
       "Transmission Overdrive Switch                           156\n",
       "7-Speed Manual                                          151\n",
       "6-Speed Automatic with Auto-Shift                       111\n",
       "2                                                        91\n",
       "–                                                        76\n",
       "2-Speed A/T                                              71\n",
       "Variable                                                 66\n",
       "F                                                        65\n",
       "4-Speed Automatic                                        47\n",
       "10-Speed Automatic with Overdrive                        40\n",
       "6 Speed Mt                                               37\n",
       "9-Speed Automatic with Auto-Shift                        33\n",
       "6-Speed Electronically Controlled Automatic with O       31\n",
       "7-Speed                                                  29\n",
       "8-Speed Manual                                           28\n",
       "Manual                                                   27\n",
       "6-Speed                                                  27\n",
       "2-Speed Automatic                                        22\n",
       "6 Speed At/Mt                                            20\n",
       "7-Speed DCT Automatic                                    18\n",
       "Single-Speed Fixed Gear                                  16\n",
       "CVT-F                                                    15\n",
       "8-SPEED AT                                               13\n",
       "8-SPEED A/T                                               7\n",
       "SCHEDULED FOR OR IN PRODUCTION                            6\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df['transmission'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "734f3eb3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:13.411672Z",
     "iopub.status.busy": "2024-09-12T08:26:13.411224Z",
     "iopub.status.idle": "2024-09-12T08:26:13.419809Z",
     "shell.execute_reply": "2024-09-12T08:26:13.418579Z"
    },
    "papermill": {
     "duration": 0.027293,
     "end_time": "2024-09-12T08:26:13.422280",
     "exception": false,
     "start_time": "2024-09-12T08:26:13.394987",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def transmission_type(x):\n",
    "    if('at' in x['transmission'].lower()) or ('a/t' in x['transmission'].lower()) or ('automatic' in x['transmission'].lower()) or ('cvt' in x['transmission'].lower()) or ('f' in x['transmission'].lower()) or ('dct' in x['transmission'].lower()):\n",
    "        return 'A/T'\n",
    "    elif ('manual' in x['transmission'].lower()) or ('mt' in x['transmission'].lower()) or ('m/t' in x['transmission'].lower()):\n",
    "        return 'M/T'\n",
    "    else:\n",
    "        return 'M/T'\n",
    "    return x['transmission']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "1d64b73d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:13.454460Z",
     "iopub.status.busy": "2024-09-12T08:26:13.453689Z",
     "iopub.status.idle": "2024-09-12T08:26:17.707697Z",
     "shell.execute_reply": "2024-09-12T08:26:17.706329Z"
    },
    "papermill": {
     "duration": 4.273996,
     "end_time": "2024-09-12T08:26:17.711721",
     "exception": false,
     "start_time": "2024-09-12T08:26:13.437725",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_17/2480341331.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  train_df['transmission'] = train_df.apply(transmission_type, axis=1)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "transmission\n",
       "A/T    171097\n",
       "M/T     16664\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df['transmission'] = train_df.apply(transmission_type, axis=1)\n",
    "train_df['transmission'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "4c744ca9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:26:17.753404Z",
     "iopub.status.busy": "2024-09-12T08:26:17.752954Z",
     "iopub.status.idle": "2024-09-12T08:32:16.086734Z",
     "shell.execute_reply": "2024-09-12T08:32:16.084752Z"
    },
    "papermill": {
     "duration": 358.37393,
     "end_time": "2024-09-12T08:32:16.106307",
     "exception": false,
     "start_time": "2024-09-12T08:26:17.732377",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<BarContainer object of 187761 artists>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.bar(train_df['model'], train_df['price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "6b4d29be",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:32:16.143990Z",
     "iopub.status.busy": "2024-09-12T08:32:16.143448Z",
     "iopub.status.idle": "2024-09-12T08:32:16.169004Z",
     "shell.execute_reply": "2024-09-12T08:32:16.166816Z"
    },
    "papermill": {
     "duration": 0.047773,
     "end_time": "2024-09-12T08:32:16.172864",
     "exception": false,
     "start_time": "2024-09-12T08:32:16.125091",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>brand</th>\n",
       "      <th>model</th>\n",
       "      <th>model_year</th>\n",
       "      <th>milage</th>\n",
       "      <th>fuel_type</th>\n",
       "      <th>engine</th>\n",
       "      <th>transmission</th>\n",
       "      <th>ext_col</th>\n",
       "      <th>int_col</th>\n",
       "      <th>clean_title</th>\n",
       "      <th>price</th>\n",
       "      <th>Involved in Accident</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MINI</td>\n",
       "      <td>Cooper S Base</td>\n",
       "      <td>2007</td>\n",
       "      <td>213000</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>172.0HP 1.6L 4 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Yellow</td>\n",
       "      <td>Gray</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4200</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Lincoln</td>\n",
       "      <td>LS V8</td>\n",
       "      <td>2002</td>\n",
       "      <td>143250</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>252.0HP 3.9L 8 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Silver</td>\n",
       "      <td>Beige</td>\n",
       "      <td>Yes</td>\n",
       "      <td>4999</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Chevrolet</td>\n",
       "      <td>Silverado 2500 LT</td>\n",
       "      <td>2002</td>\n",
       "      <td>136731</td>\n",
       "      <td>E85 Flex Fuel</td>\n",
       "      <td>320.0HP 5.3L 8 Cylinder Engine Flex Fuel Capab...</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Blue</td>\n",
       "      <td>Gray</td>\n",
       "      <td>Yes</td>\n",
       "      <td>13900</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Genesis</td>\n",
       "      <td>G90 5.0 Ultimate</td>\n",
       "      <td>2017</td>\n",
       "      <td>19500</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>420.0HP 5.0L 8 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Black</td>\n",
       "      <td>Black</td>\n",
       "      <td>Yes</td>\n",
       "      <td>45000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>Metris Base</td>\n",
       "      <td>2021</td>\n",
       "      <td>7388</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>208.0HP 2.0L 4 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Black</td>\n",
       "      <td>Beige</td>\n",
       "      <td>Yes</td>\n",
       "      <td>97500</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188528</th>\n",
       "      <td>Cadillac</td>\n",
       "      <td>Escalade ESV Platinum</td>\n",
       "      <td>2017</td>\n",
       "      <td>49000</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>420.0HP 6.2L 8 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Beige</td>\n",
       "      <td>Yes</td>\n",
       "      <td>27500</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188529</th>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>AMG C 43 AMG C 43 4MATIC</td>\n",
       "      <td>2018</td>\n",
       "      <td>28600</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>385.0HP 3.0L V6 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Black</td>\n",
       "      <td>Yes</td>\n",
       "      <td>30000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188530</th>\n",
       "      <td>Mercedes-Benz</td>\n",
       "      <td>AMG GLC 63 Base 4MATIC</td>\n",
       "      <td>2021</td>\n",
       "      <td>13650</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>469.0HP 4.0L 8 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Black</td>\n",
       "      <td>Yes</td>\n",
       "      <td>86900</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188531</th>\n",
       "      <td>Audi</td>\n",
       "      <td>S5 3.0T Prestige</td>\n",
       "      <td>2022</td>\n",
       "      <td>13895</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>3.0L</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Daytona Gray Pearl Effect</td>\n",
       "      <td>Black</td>\n",
       "      <td>No</td>\n",
       "      <td>84900</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188532</th>\n",
       "      <td>Porsche</td>\n",
       "      <td>Macan Base</td>\n",
       "      <td>2016</td>\n",
       "      <td>59500</td>\n",
       "      <td>Gasoline</td>\n",
       "      <td>252.0HP 2.0L 4 Cylinder Engine Gasoline Fuel</td>\n",
       "      <td>A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Black</td>\n",
       "      <td>Yes</td>\n",
       "      <td>28995</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>187761 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                brand                     model  model_year  milage  \\\n",
       "0                MINI             Cooper S Base        2007  213000   \n",
       "1             Lincoln                     LS V8        2002  143250   \n",
       "2           Chevrolet         Silverado 2500 LT        2002  136731   \n",
       "3             Genesis          G90 5.0 Ultimate        2017   19500   \n",
       "4       Mercedes-Benz               Metris Base        2021    7388   \n",
       "...               ...                       ...         ...     ...   \n",
       "188528       Cadillac     Escalade ESV Platinum        2017   49000   \n",
       "188529  Mercedes-Benz  AMG C 43 AMG C 43 4MATIC        2018   28600   \n",
       "188530  Mercedes-Benz    AMG GLC 63 Base 4MATIC        2021   13650   \n",
       "188531           Audi          S5 3.0T Prestige        2022   13895   \n",
       "188532        Porsche                Macan Base        2016   59500   \n",
       "\n",
       "            fuel_type                                             engine  \\\n",
       "0            Gasoline       172.0HP 1.6L 4 Cylinder Engine Gasoline Fuel   \n",
       "1            Gasoline       252.0HP 3.9L 8 Cylinder Engine Gasoline Fuel   \n",
       "2       E85 Flex Fuel  320.0HP 5.3L 8 Cylinder Engine Flex Fuel Capab...   \n",
       "3            Gasoline       420.0HP 5.0L 8 Cylinder Engine Gasoline Fuel   \n",
       "4            Gasoline       208.0HP 2.0L 4 Cylinder Engine Gasoline Fuel   \n",
       "...               ...                                                ...   \n",
       "188528       Gasoline       420.0HP 6.2L 8 Cylinder Engine Gasoline Fuel   \n",
       "188529       Gasoline      385.0HP 3.0L V6 Cylinder Engine Gasoline Fuel   \n",
       "188530       Gasoline       469.0HP 4.0L 8 Cylinder Engine Gasoline Fuel   \n",
       "188531       Gasoline                                               3.0L   \n",
       "188532       Gasoline       252.0HP 2.0L 4 Cylinder Engine Gasoline Fuel   \n",
       "\n",
       "       transmission                    ext_col int_col clean_title  price  \\\n",
       "0               A/T                     Yellow    Gray         Yes   4200   \n",
       "1               A/T                     Silver   Beige         Yes   4999   \n",
       "2               A/T                       Blue    Gray         Yes  13900   \n",
       "3               A/T                      Black   Black         Yes  45000   \n",
       "4               A/T                      Black   Beige         Yes  97500   \n",
       "...             ...                        ...     ...         ...    ...   \n",
       "188528          A/T                      White   Beige         Yes  27500   \n",
       "188529          A/T                      White   Black         Yes  30000   \n",
       "188530          A/T                      White   Black         Yes  86900   \n",
       "188531          A/T  Daytona Gray Pearl Effect   Black          No  84900   \n",
       "188532          A/T                      White   Black         Yes  28995   \n",
       "\n",
       "        Involved in Accident  \n",
       "0                          0  \n",
       "1                          1  \n",
       "2                          0  \n",
       "3                          0  \n",
       "4                          0  \n",
       "...                      ...  \n",
       "188528                     0  \n",
       "188529                     1  \n",
       "188530                     0  \n",
       "188531                     0  \n",
       "188532                     0  \n",
       "\n",
       "[187761 rows x 12 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "acc28dc7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:32:16.210446Z",
     "iopub.status.busy": "2024-09-12T08:32:16.209973Z",
     "iopub.status.idle": "2024-09-12T08:32:16.349124Z",
     "shell.execute_reply": "2024-09-12T08:32:16.347381Z"
    },
    "papermill": {
     "duration": 0.161862,
     "end_time": "2024-09-12T08:32:16.352411",
     "exception": false,
     "start_time": "2024-09-12T08:32:16.190549",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 125690 entries, 0 to 125689\n",
      "Data columns (total 12 columns):\n",
      " #   Column        Non-Null Count   Dtype \n",
      "---  ------        --------------   ----- \n",
      " 0   id            125690 non-null  int64 \n",
      " 1   brand         125690 non-null  object\n",
      " 2   model         125690 non-null  object\n",
      " 3   model_year    125690 non-null  int64 \n",
      " 4   milage        125690 non-null  int64 \n",
      " 5   fuel_type     122307 non-null  object\n",
      " 6   engine        125690 non-null  object\n",
      " 7   transmission  125690 non-null  object\n",
      " 8   ext_col       125690 non-null  object\n",
      " 9   int_col       125690 non-null  object\n",
      " 10  accident      124058 non-null  object\n",
      " 11  clean_title   111451 non-null  object\n",
      "dtypes: int64(3), object(9)\n",
      "memory usage: 11.5+ MB\n"
     ]
    }
   ],
   "source": [
    "test_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "20c8b50d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-09-12T08:32:16.391574Z",
     "iopub.status.busy": "2024-09-12T08:32:16.390386Z",
     "iopub.status.idle": "2024-09-12T08:32:16.462854Z",
     "shell.execute_reply": "2024-09-12T08:32:16.461348Z"
    },
    "papermill": {
     "duration": 0.096511,
     "end_time": "2024-09-12T08:32:16.467195",
     "exception": false,
     "start_time": "2024-09-12T08:32:16.370684",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>brand</th>\n",
       "      <th>model</th>\n",
       "      <th>model_year</th>\n",
       "      <th>milage</th>\n",
       "      <th>fuel_type</th>\n",
       "      <th>engine</th>\n",
       "      <th>transmission</th>\n",
       "      <th>ext_col</th>\n",
       "      <th>int_col</th>\n",
       "      <th>accident</th>\n",
       "      <th>clean_title</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>704</th>\n",
       "      <td>189237</td>\n",
       "      <td>Dodge</td>\n",
       "      <td>Challenger SRT8 392</td>\n",
       "      <td>2010</td>\n",
       "      <td>33700</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Gray</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>892</th>\n",
       "      <td>189425</td>\n",
       "      <td>Dodge</td>\n",
       "      <td>Challenger R/T Scat Pack</td>\n",
       "      <td>2018</td>\n",
       "      <td>38000</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>8-Speed A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>991</th>\n",
       "      <td>189524</td>\n",
       "      <td>Porsche</td>\n",
       "      <td>Boxster S</td>\n",
       "      <td>1993</td>\n",
       "      <td>97496</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Silver</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1008</th>\n",
       "      <td>189541</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>Land Cruiser Base</td>\n",
       "      <td>1994</td>\n",
       "      <td>97000</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Gray</td>\n",
       "      <td>At least 1 accident or damage reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1011</th>\n",
       "      <td>189544</td>\n",
       "      <td>Chevrolet</td>\n",
       "      <td>Sonic LT</td>\n",
       "      <td>2018</td>\n",
       "      <td>8940</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>6-Speed A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>–</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124669</th>\n",
       "      <td>313202</td>\n",
       "      <td>Nissan</td>\n",
       "      <td>300ZX Base</td>\n",
       "      <td>1993</td>\n",
       "      <td>168000</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>5-Speed M/T</td>\n",
       "      <td>Red</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124785</th>\n",
       "      <td>313318</td>\n",
       "      <td>Ford</td>\n",
       "      <td>Mustang EcoBoost Premium</td>\n",
       "      <td>2016</td>\n",
       "      <td>111300</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>A/T</td>\n",
       "      <td>Orange</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124879</th>\n",
       "      <td>313412</td>\n",
       "      <td>Toyota</td>\n",
       "      <td>Land Cruiser Base</td>\n",
       "      <td>1996</td>\n",
       "      <td>58500</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125101</th>\n",
       "      <td>313634</td>\n",
       "      <td>Chevrolet</td>\n",
       "      <td>1500 Cheyenne</td>\n",
       "      <td>1994</td>\n",
       "      <td>158000</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>A/T</td>\n",
       "      <td>White</td>\n",
       "      <td>Brown</td>\n",
       "      <td>At least 1 accident or damage reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125344</th>\n",
       "      <td>313877</td>\n",
       "      <td>Dodge</td>\n",
       "      <td>Challenger SRT 392</td>\n",
       "      <td>2016</td>\n",
       "      <td>62000</td>\n",
       "      <td>–</td>\n",
       "      <td>–</td>\n",
       "      <td>8-Speed A/T</td>\n",
       "      <td>Red</td>\n",
       "      <td>Black</td>\n",
       "      <td>None reported</td>\n",
       "      <td>Yes</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>525 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            id      brand                     model  model_year  milage  \\\n",
       "704     189237      Dodge       Challenger SRT8 392        2010   33700   \n",
       "892     189425      Dodge  Challenger R/T Scat Pack        2018   38000   \n",
       "991     189524    Porsche                 Boxster S        1993   97496   \n",
       "1008    189541     Toyota         Land Cruiser Base        1994   97000   \n",
       "1011    189544  Chevrolet                  Sonic LT        2018    8940   \n",
       "...        ...        ...                       ...         ...     ...   \n",
       "124669  313202     Nissan                300ZX Base        1993  168000   \n",
       "124785  313318       Ford  Mustang EcoBoost Premium        2016  111300   \n",
       "124879  313412     Toyota         Land Cruiser Base        1996   58500   \n",
       "125101  313634  Chevrolet             1500 Cheyenne        1994  158000   \n",
       "125344  313877      Dodge        Challenger SRT 392        2016   62000   \n",
       "\n",
       "       fuel_type engine transmission ext_col int_col  \\\n",
       "704            –      –          A/T   White    Gray   \n",
       "892            –      –  8-Speed A/T   White   Black   \n",
       "991            –      –          A/T  Silver   Black   \n",
       "1008           –      –          A/T   White    Gray   \n",
       "1011           –      –  6-Speed A/T   White       –   \n",
       "...          ...    ...          ...     ...     ...   \n",
       "124669         –      –  5-Speed M/T     Red   Black   \n",
       "124785         –      –          A/T  Orange   Black   \n",
       "124879         –      –          A/T   White   Black   \n",
       "125101         –      –          A/T   White   Brown   \n",
       "125344         –      –  8-Speed A/T     Red   Black   \n",
       "\n",
       "                                      accident clean_title  \n",
       "704                              None reported         Yes  \n",
       "892                              None reported         Yes  \n",
       "991                              None reported         NaN  \n",
       "1008    At least 1 accident or damage reported         Yes  \n",
       "1011                             None reported         Yes  \n",
       "...                                        ...         ...  \n",
       "124669                           None reported         Yes  \n",
       "124785                           None reported         Yes  \n",
       "124879                           None reported         Yes  \n",
       "125101  At least 1 accident or damage reported         Yes  \n",
       "125344                           None reported         Yes  \n",
       "\n",
       "[525 rows x 12 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_df[(test_df['fuel_type'] == '–') & (test_df['engine'] == '–') ]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "824fe59c",
   "metadata": {
    "papermill": {
     "duration": 0.018249,
     "end_time": "2024-09-12T08:32:16.503768",
     "exception": false,
     "start_time": "2024-09-12T08:32:16.485519",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 9057646,
     "sourceId": 76728,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30761,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 380.363122,
   "end_time": "2024-09-12T08:32:19.247178",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-09-12T08:25:58.884056",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
